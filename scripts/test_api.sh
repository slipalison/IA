#!/bin/bash

echo "üß™ Testando DevOpsAI API..."

API_URL="http://localhost:5290"

echo ""
echo "1Ô∏è‚É£ Testando status da API..."
curl -s "$API_URL/status" | jq '.' || curl -s "$API_URL/status"

echo ""
echo "2Ô∏è‚É£ Testando health checks..."
curl -s "$API_URL/health/detailed" | jq '.' || curl -s "$API_URL/health/detailed"

echo ""
echo "3Ô∏è‚É£ Testando modelos do Ollama..."
curl -s "$API_URL/api/ollama/models" | jq '.' || curl -s "$API_URL/api/ollama/models"

echo ""
echo "4Ô∏è‚É£ Testando chat simples..."
curl -X POST "$API_URL/api/ollama/chat" \
     -H "Content-Type: application/json" \
     -d '{"message":"Hello! Como voc√™ pode ajudar com DevOps?"}' \
     | jq '.' || echo "Erro no chat"

echo ""
echo "5Ô∏è‚É£ Testando an√°lise de logs..."
curl -X POST "$API_URL/api/devops/analyze-logs" \
     -H "Content-Type: application/json" \
     -d '{"logContent":"2024-06-02 10:30:15 ERROR: Connection timeout to database\n2024-06-02 10:30:16 WARN: Retrying connection...\n2024-06-02 10:30:20 ERROR: Max retries exceeded"}' \
     | jq '.' || echo "Erro na an√°lise de logs"

echo ""
echo "6Ô∏è‚É£ Testando gera√ß√£o de script..."
curl -X POST "$API_URL/api/devops/generate-script" \
     -H "Content-Type: application/json" \
     -d '{"description":"Backup autom√°tico de banco PostgreSQL","scriptType":"bash"}' \
     | jq '.' || echo "Erro na gera√ß√£o de script"

echo ""
echo "‚úÖ Testes conclu√≠dos!"



echo "üß™ Testando Sistema RAG de Documenta√ß√£o..."

API_URL="http://localhost:5290"

echo ""
echo "1Ô∏è‚É£ Inicializando base de documenta√ß√£o..."
curl -X POST "$API_URL/api/documentation/initialize" \
     -H "Content-Type: application/json" \
     | jq '.' || echo "Erro na inicializa√ß√£o"

echo ""
echo "2Ô∏è‚É£ Perguntando sobre Docker..."
curl -X POST "$API_URL/api/documentation/ask" \
     -H "Content-Type: application/json" \
     -d '{"question":"Como criar um Dockerfile para uma aplica√ß√£o Node.js?","maxResults":2}' \
     | jq '.' || echo "Erro na consulta"

echo ""
echo "3Ô∏è‚É£ Perguntando sobre Kubernetes..."
curl -X POST "$API_URL/api/documentation/ask" \
     -H "Content-Type: application/json" \
     -d '{"question":"Quais s√£o os componentes principais do Kubernetes?","maxResults":3}' \
     | jq '.' || echo "Erro na consulta"

echo ""
echo "4Ô∏è‚É£ Adicionando documento personalizado..."
curl -X POST "$API_URL/api/documentation/add-document" \
     -H "Content-Type: application/json" \
     -d '{"title":"Git Workflow","content":"Git Flow √© um modelo de branching: main/master (produ√ß√£o), develop (desenvolvimento), feature/* (funcionalidades), release/* (prepara√ß√£o), hotfix/* (corre√ß√µes urgentes). Comandos: git flow init, git flow feature start, git flow feature finish.","category":"git"}' \
     | jq '.' || echo "Erro ao adicionar"

echo ""
echo "5Ô∏è‚É£ Perguntando sobre Git que acabamos de adicionar..."
curl -X POST "$API_URL/api/documentation/ask" \
     -H "Content-Type: application/json" \
     -d '{"question":"Como funciona o Git Flow?","maxResults":2}' \
     | jq '.' || echo "Erro na consulta"

echo ""
echo "‚úÖ Testes RAG conclu√≠dos!"


# Verificar endpoints dispon√≠veis
curl -s "http://localhost:8000/api/v2/collections" | jq .

# Testar criar cole√ß√£o com API v1
curl -X POST "http://localhost:8000/api/v2/collections" \
     -H "Content-Type: application/json" \
     -d '{
       "name": "devops-docs",
       "metadata": {"description": "Documenta√ß√£o DevOps"}
     }'
